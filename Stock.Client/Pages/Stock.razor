@page "/stock"

@using global::Stock.Server.Services
@inject PolygonService PolygonService

<h3>Search Company</h3>

<div class="form-group">
    <label for="symbolInput">Symbol:</label>
    <input id="symbolInput" class="form-control" value="@Symbol" @oninput="UpdateSymbol" />
</div>

<button class="btn btn-primary" @onclick="Search">Search</button>
@if(_IsLoading)
{
    <p><em>Loading...</em></p>
}
@if (Company != null)
{
    <h4>Company Information</h4>
    <p><strong>Logo:</strong> <img src="@Company.Logo" alt="Company Logo" /></p>
    <p><strong>List Date:</strong> @Company.ListDate.ToString("yyyy-MM-dd")</p>
    <p><strong>CIK:</strong> @Company.Cik</p>
    <p><strong>Bloomberg:</strong> @Company.Bloomberg</p>
    <p><strong>SIC:</strong> @Company.Sic</p>
    <p><strong>Country:</strong> @Company.Country</p>
    <p><strong>Industry:</strong> @Company.Industry</p>
    <p><strong>Sector:</strong> @Company.Sector</p>
    <p><strong>Market Cap:</strong> @Company.MarketCap</p>
    <p><strong>Employees:</strong> @Company.Employees</p>
    <p><strong>Phone:</strong> @Company.Phone</p>
    <p><strong>CEO:</strong> @Company.Ceo</p>
    <p><strong>URL:</strong> <a href="@Company.Url" target="_blank">@Company.Url</a></p>
    <p><strong>Description:</strong> @Company.Description</p>
    <p><strong>Exchange:</strong> @Company.Exchange</p>
    <p><strong>Name:</strong> @Company.Name</p>
    <p><strong>Symbol:</strong> @Company.Symbol</p>
    <p><strong>HQ Address:</strong> @Company.HqAddress</p>
    <p><strong>HQ State:</strong> @Company.HqState</p>
    <p><strong>HQ Country:</strong> @Company.HqCountry</p>
    <p><strong>Type:</strong> @Company.Type</p>
    <p><strong>Active:</strong> @Company.Active</p>
  
                                                 
}
else
{
    <p>No company found.</p>
}

@code {
    private string Symbol;
    private Company? Company;
    private bool _IsLoading;

    private void UpdateSymbol(ChangeEventArgs e)
    {
        Symbol = e.Value.ToString();
    }

    private async Task Search()
    {
        _IsLoading = true;
        try
        {
            var companyData = await PolygonService.GetCompanyAsync(Symbol);
            if (companyData != null)
            {
                Company = companyData;
            }
            else
            {
                Company = null; 
            }
        }
        catch
        {
            Company = null; 
        }
        _IsLoading = false;
    }
}
