@page "/chart"

@inject PolygonService PolygonService
@inject NavigationManager NavigationManager
<h3>Stock Chart</h3>

<div>
   <input type="text" @bind="_searchSign"/>
   <button type="button" @onclick="Select">Confirm</button>
</div>

<div>
   <label for="_fromDate">From</label>
   <input type="date" id="_fromDate" @bind="_fromDate"/>
   <label for="_toDate">To</label>
   <input type="date" id="_toDate" @bind="_toDate" />
   <button type="button" @onclick="Update">Update</button>
</div>

<div>
   <button type ="button" @onclick="Back">Back</button>
</div>

// TODO Fix the chart
@if(_company != null)
{
   <div>
      <SfStockChart>
          <StockChartTitle Text="@_company.Name"></StockChartTitle>
          <StockChartPrimaryXAxis>
              <DateTimeAxis ValueType="ChartValueType.DateTime" IntervalType="DateTimeIntervalType.Months" LabelFormat="MM"></DateTimeAxis>
          </StockChartPrimaryXAxis>
          <StockChartPrimaryYAxis>
              <NumericAxis Title="Price"></NumericAxis>
          </StockChartPrimaryYAxis>
          <StockChartSeries>
              <HiloOpenCloseSeries DataSource="@_datas" XName="Date" High="High" Low="Low" Open="Open" Close="Close" Name="Price">
              </HiloOpenCloseSeries>
          </StockChartSeries>
      </SfStockChart>

      
   </div>
}
@code
{

   private Company? _company;
   private string _searchSign;
   private List<PriceData> _datas;
   private DateTime _fromDate;
   private DateTime _toDate;
   
   


   private async Task Select()
   {
      if (!string.IsNullOrEmpty(_searchSign))
      {
         _company = await PolygonService.GetCompanyAsync(_searchSign);
         _datas = await PolygonService.GetDataAsync(_searchSign,_fromDate,_toDate);
      }
   }
   private void Back()
   {
      NavigationManager.NavigateTo("/stock",true);
   }
   private async Task Update()
   {
      if(_company != null)
         _datas = await PolygonService.GetDataAsync(_company.Symbol, _fromDate, _toDate);
      
   }
}

